{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddtask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79821f78.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    return <button onClick={onClick} style={{backgroundColor: color}} className={'btn'}>{text}</button>\r\n};\r\n\r\nButton.defaultProps = {\r\n    color: \"black\",\r\n    backgroundColor: \"#FF8A65\",\r\n    text: \"test\",\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\nexport default Button;","import Button from \"./Button\";\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className={\"header\"}>\r\n            <h1>{title}</h1>\r\n            <Button onClick={onAdd} color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"close\" : \"open\"}/>\r\n\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"task tracker\"\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\nexport default Header","import {FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? \"reminder\" : ''} `} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: \"red\", cursor: \"pointer\"}} onClick={() => {\r\n                onDelete(task.id)\r\n            }}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n        return (\r\n            <>\r\n                {tasks.map((task) => (\r\n                    <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n;\r\n\r\nexport default Tasks;","import {useState} from \"react\"\r\n\r\nconst AddTask = ( {onAdd}) => {\r\n    const [text, setText] = useState(\"\")\r\n    const [day, setDay] = useState(\"\")\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert(\"please enter a name\")\r\n            return\r\n        }\r\n        if(!day){\r\n            alert(\"please enter a date and time\")\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n\r\n        setText(\"\")\r\n        setDay(\"\")\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label> task </label>\r\n                <input type=\"text\" placeholder=\"add task\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control \">\r\n                <label> day & time </label>\r\n                <input type=\"text\" placeholder=\"add day & time\" value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label> Set reminder </label>\r\n                <input type=\"checkbox\" value={reminder} checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input className=\"btn btn-block\" type= 'submit' value=\"safe task\"/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport {useState} from \"react\"\n\nconst App = () => {\n\n    const [showAddtask, setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: \"breakfast\",\n            day: \"18 aug 10:00\",\n            reminder: true,\n        },\n\n        {\n            id: 2,\n            text: \"workout\",\n            day: \"18 aug 12:00\",\n            reminder: true,\n        },\n\n        {\n            id: 3,\n            text: \"lunch\",\n            day: \"18 aug 13:00\",\n            reminder: false,\n        }]\n    )\n\n    // add task\n    const addTask = (task) => {\n        const id = Math.floor(Math.random()*10000)+1\n        const newTask = {id, ...task}\n        setTasks([...tasks, newTask])\n    }\n\n    //del task\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    //toggle reminder\n    const toggleReminder = (id) => {\n        setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n\n    }\n\n    return (\n        <div className=\"container\">\n            <Header onAdd={() => setShowAddTask(!showAddtask)} showAdd={showAddtask}/>\n            {showAddtask && <AddTask onAdd={addTask}/>}\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : \"no tasks\"\n            }\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}